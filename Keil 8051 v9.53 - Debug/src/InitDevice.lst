C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Adminis
                    -trator\SimplicityStudio\v3_workspace\aidik_4ch\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2)
                    - FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Administrator\SimplicitySt
                    -udio\v3_workspace\aidik_4ch\inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C:
                    -/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB1;C:/SiliconLabs/SimplicityStudio/v3/developer/s
                    -dks/si8051/v3//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevic
                    -e.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              WDT_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_1_enter_DefaultMode_from_RESET();
  28   1              PORTS_2_enter_DefaultMode_from_RESET();
  29   1              PBCFG_0_enter_DefaultMode_from_RESET();
  30   1              ADC_0_enter_DefaultMode_from_RESET();
  31   1              VREF_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_2_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              UART_0_enter_DefaultMode_from_RESET();
  37   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  38   1              // [Config Calls]$
  39   1      
  40   1      
  41   1      }
  42          
  43          
  44          //================================================================================
  45          // WDT_0_enter_DefaultMode_from_RESET
  46          //================================================================================
  47          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  48   1              // $[WDTCN - Watchdog Timer Control]
  49   1              //Disable Watchdog with key sequence
  50   1              WDTCN = 0xDE; //First key
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 2   

  51   1              WDTCN = 0xAD; //Second key
  52   1              // [WDTCN - Watchdog Timer Control]$
  53   1      
  54   1      
  55   1      }
  56          
  57          //================================================================================
  58          // PORTS_0_enter_DefaultMode_from_RESET
  59          //================================================================================
  60          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  61   1              // $[P0 - Port 0 Pin Latch]
  62   1              // [P0 - Port 0 Pin Latch]$
  63   1      
  64   1              // $[P0MDOUT - Port 0 Output Mode]
  65   1              /*
  66   1              // B0 (Port 0 Bit 0 Output Mode) = PUSH_PULL (P0.0 output is push-pull.)
  67   1              // B1 (Port 0 Bit 1 Output Mode) = PUSH_PULL (P0.1 output is push-pull.)
  68   1              // B2 (Port 0 Bit 2 Output Mode) = PUSH_PULL (P0.2 output is push-pull.)
  69   1              // B3 (Port 0 Bit 3 Output Mode) = PUSH_PULL (P0.3 output is push-pull.)
  70   1              // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
  71   1              // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
  72   1              //     drain.)
  73   1              // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
  74   1              //     drain.)
  75   1              // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
  76   1              //     drain.)
  77   1              */
  78   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__PUSH_PULL | P0MDOUT_B2__PUSH_PULL
  79   1                       | P0MDOUT_B3__PUSH_PULL | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  80   1                       | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
  81   1              // [P0MDOUT - Port 0 Output Mode]$
  82   1      
  83   1              // $[P0MDIN - Port 0 Input Mode]
  84   1              /*
  85   1              // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
  86   1              //     digital mode.)
  87   1              // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
  88   1              //     digital mode.)
  89   1              // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
  90   1              //     digital mode.)
  91   1              // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
  92   1              //     digital mode.)
  93   1              // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
  94   1              //     digital mode.)
  95   1              // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
  96   1              //     digital mode.)
  97   1              // B6 (Port 0 Bit 6 Input Mode) = ANALOG (P0.6 pin is configured for
  98   1              //     analog mode.)
  99   1              // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 100   1              //     digital mode.)
 101   1              */
 102   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 103   1                       | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 104   1                       | P0MDIN_B6__ANALOG | P0MDIN_B7__DIGITAL;
 105   1              // [P0MDIN - Port 0 Input Mode]$
 106   1      
 107   1              // $[P0SKIP - Port 0 Skip]
 108   1              /*
 109   1              // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 110   1              //     crossbar.)
 111   1              // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 112   1              //     crossbar.)
 113   1              // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 3   

 114   1              //     crossbar.)
 115   1              // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
 116   1              //     crossbar.)
 117   1              // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 118   1              //     crossbar.)
 119   1              // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 120   1              //     crossbar.)
 121   1              // B6 (Port 0 Bit 6 Skip) = SKIPPED (P0.6 pin is skipped by the
 122   1              //     crossbar.)
 123   1              // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 124   1              //     crossbar.)
 125   1              */
 126   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__NOT_SKIPPED | P0SKIP_B2__NOT_SKIPPED
 127   1                       | P0SKIP_B3__NOT_SKIPPED | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 128   1                       | P0SKIP_B6__SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 129   1              // [P0SKIP - Port 0 Skip]$
 130   1      
 131   1              // $[P0MASK - Port 0 Mask]
 132   1              // [P0MASK - Port 0 Mask]$
 133   1      
 134   1              // $[P0MAT - Port 0 Match]
 135   1              // [P0MAT - Port 0 Match]$
 136   1      
 137   1      
 138   1      }
 139          
 140          //================================================================================
 141          // PORTS_1_enter_DefaultMode_from_RESET
 142          //================================================================================
 143          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 144   1              // $[P1 - Port 1 Pin Latch]
 145   1              // [P1 - Port 1 Pin Latch]$
 146   1      
 147   1              // $[P1MDOUT - Port 1 Output Mode]
 148   1              /*
 149   1              // B0 (Port 1 Bit 0 Output Mode) = PUSH_PULL (P1.0 output is push-pull.)
 150   1              // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 151   1              //     drain.)
 152   1              // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 153   1              //     drain.)
 154   1              // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 155   1              //     drain.)
 156   1              // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
 157   1              //     drain.)
 158   1              // B5 (Port 1 Bit 5 Output Mode) = PUSH_PULL (P1.5 output is push-pull.)
 159   1              // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 160   1              //     drain.)
 161   1              // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 162   1              //     drain.)
 163   1              */
 164   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN | P1MDOUT_B2__OPEN_DRAIN
 165   1                       | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__PUSH_PULL
 166   1                       | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 167   1              // [P1MDOUT - Port 1 Output Mode]$
 168   1      
 169   1              // $[P1MDIN - Port 1 Input Mode]
 170   1              /*
 171   1              // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 172   1              //     digital mode.)
 173   1              // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 174   1              //     digital mode.)
 175   1              // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 176   1              //     digital mode.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 4   

 177   1              // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 178   1              //     digital mode.)
 179   1              // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 180   1              //     digital mode.)
 181   1              // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 182   1              //     digital mode.)
 183   1              // B6 (Port 1 Bit 6 Input Mode) = ANALOG (P1.6 pin is configured for
 184   1              //     analog mode.)
 185   1              // B7 (Port 1 Bit 7 Input Mode) = ANALOG (P1.7 pin is configured for
 186   1              //     analog mode.)
 187   1              */
 188   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 189   1                       | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 190   1                       | P1MDIN_B6__ANALOG | P1MDIN_B7__ANALOG;
 191   1              // [P1MDIN - Port 1 Input Mode]$
 192   1      
 193   1              // $[P1SKIP - Port 1 Skip]
 194   1              /*
 195   1              // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 196   1              //     crossbar.)
 197   1              // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 198   1              //     crossbar.)
 199   1              // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 200   1              //     crossbar.)
 201   1              // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 202   1              //     crossbar.)
 203   1              // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 204   1              //     crossbar.)
 205   1              // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 206   1              //     crossbar.)
 207   1              // B6 (Port 1 Bit 6 Skip) = SKIPPED (P1.6 pin is skipped by the
 208   1              //     crossbar.)
 209   1              // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 210   1              //     crossbar.)
 211   1              */
 212   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED | P1SKIP_B2__NOT_SKIPPED
 213   1                       | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 214   1                       | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 215   1              // [P1SKIP - Port 1 Skip]$
 216   1      
 217   1              // $[P1MASK - Port 1 Mask]
 218   1              // [P1MASK - Port 1 Mask]$
 219   1      
 220   1              // $[P1MAT - Port 1 Match]
 221   1              // [P1MAT - Port 1 Match]$
 222   1      
 223   1      
 224   1      }
 225          
 226          //================================================================================
 227          // PBCFG_0_enter_DefaultMode_from_RESET
 228          //================================================================================
 229          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 230   1              // $[XBR2 - Port I/O Crossbar 2]
 231   1              /*
 232   1              // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 233   1              //     Pullups enabled (except for Ports whose I/O are configured for analog
 234   1              //     mode).)
 235   1              // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 236   1              */
 237   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 238   1              // [XBR2 - Port I/O Crossbar 2]$
 239   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 5   

 240   1              // $[PRTDRV - Port Drive Strength]
 241   1              // [PRTDRV - Port Drive Strength]$
 242   1      
 243   1              // $[XBR0 - Port I/O Crossbar 0]
 244   1              /*
 245   1              // URT0E (UART I/O Output Enable) = ENABLED (UART TX, RX routed to Port
 246   1              //     pins P0.4 and P0.5.)
 247   1              // SPI0E (SPI I/O Enable) = DISABLED (SPI I/O unavailable at Port pins.)
 248   1              // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 249   1              //     pins.)
 250   1              // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 251   1              //     pin.)
 252   1              // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 253   1              //     (Asynchronous CP0 unavailable at Port pin.)
 254   1              // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 255   1              //     pin.)
 256   1              // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 257   1              //     (Asynchronous CP1 unavailable at Port pin.)
 258   1              // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 259   1              //     pin.)
 260   1              */
 261   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 262   1                       | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 263   1                       | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 264   1              // [XBR0 - Port I/O Crossbar 0]$
 265   1      
 266   1              // $[XBR1 - Port I/O Crossbar 1]
 267   1              // [XBR1 - Port I/O Crossbar 1]$
 268   1      
 269   1      
 270   1      }
 271          
 272          //================================================================================
 273          // ADC_0_enter_DefaultMode_from_RESET
 274          //================================================================================
 275          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 276   1              // $[ADC0CN1 - ADC0 Control 1]
 277   1              // [ADC0CN1 - ADC0 Control 1]$
 278   1      
 279   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 280   1              /*
 281   1              // ADC0MX (AMUX0 Positive Input Selection) = ADC0P14 (Select ADC0.14.)
 282   1              */
 283   1              ADC0MX = ADC0MX_ADC0MX__ADC0P14;
 284   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 285   1      
 286   1              // $[ADC0CF - ADC0 Configuration]
 287   1              /*
 288   1              // ADSC (SAR Clock Divider) = 0x01
 289   1              // AD8BE (8-Bit Mode Enable) = NORMAL (ADC0 operates in 10-bit or 12-bit
 290   1              //     mode (normal operation).)
 291   1              // ADGN (Gain Control) = GAIN_1 (The on-chip PGA gain is 1.)
 292   1              // ADTM (Track Mode) = TRACK_NORMAL (Normal Track Mode. When ADC0 is
 293   1              //     enabled, conversion begins immediately following the start-of-
 294   1              //     conversion signal.)
 295   1              */
 296   1              ADC0CF = (0x01 << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__NORMAL | ADC0CF_ADGN__GAIN_1
 297   1                       | ADC0CF_ADTM__TRACK_NORMAL;
 298   1              // [ADC0CF - ADC0 Configuration]$
 299   1      
 300   1              // $[ADC0AC - ADC0 Accumulator Configuration]
 301   1              // [ADC0AC - ADC0 Accumulator Configuration]$
 302   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 6   

 303   1              // $[ADC0TK - ADC0 Burst Mode Track Time]
 304   1              // [ADC0TK - ADC0 Burst Mode Track Time]$
 305   1      
 306   1              // $[ADC0PWR - ADC0 Power Control]
 307   1              // [ADC0PWR - ADC0 Power Control]$
 308   1      
 309   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 310   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 311   1      
 312   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 313   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 314   1      
 315   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 316   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 317   1      
 318   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 319   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 320   1      
 321   1              // $[ADC0CN0 - ADC0 Control 0]
 322   1              /*
 323   1              // ADEN (ADC Enable) = ENABLED (Enable ADC0 (active and ready for data
 324   1              //     conversions).)
 325   1              // ADCM (Start of Conversion Mode Select) = TIMER2 (ADC0 conversion
 326   1              //     initiated on overflow of Timer 2.)
 327   1              */
 328   1              ADC0CN0 &= ~ADC0CN0_ADCM__FMASK;
 329   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED
 330   1                       | ADC0CN0_ADCM__TIMER2;
 331   1              // [ADC0CN0 - ADC0 Control 0]$
 332   1      
 333   1      
 334   1      }
 335          
 336          //================================================================================
 337          // VREF_0_enter_DefaultMode_from_RESET
 338          //================================================================================
 339          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 340   1              // $[REF0CN - Voltage Reference Control]
 341   1              /*
 342   1              // TEMPE (Temperature Sensor Enable) = TEMP_DISABLED (Disable the
 343   1              //     Temperature Sensor.)
 344   1              // GNDSL (Analog Ground Reference) = GND_PIN (The ADC0 ground reference
 345   1              //     is the GND pin.)
 346   1              // IREFLVL (Internal Voltage Reference Level) = 1P65 (The internal
 347   1              //     reference operates at 1.65 V nominal.)
 348   1              // REFSL (Voltage Reference Select) = VDD_PIN (The ADC0 voltage reference
 349   1              //     is the VDD pin.)
 350   1              */
 351   1              REF0CN = REF0CN_TEMPE__TEMP_DISABLED | REF0CN_GNDSL__GND_PIN | REF0CN_IREFLVL__1P65
 352   1                       | REF0CN_REFSL__VDD_PIN;
 353   1              // [REF0CN - Voltage Reference Control]$
 354   1      
 355   1      
 356   1      }
 357          
 358          //================================================================================
 359          // CLOCK_0_enter_DefaultMode_from_RESET
 360          //================================================================================
 361          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 362   1              // $[CLKSEL - Clock Select]
 363   1              /*
 364   1              // CLKSL (Clock Source Select) = HFOSC (Clock derived from the Internal
 365   1              //     High-Frequency Oscillator.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 7   

 366   1              // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 367   1              //     selected clock source divided by 1.)
 368   1              */
 369   1              CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 370   1              // [CLKSEL - Clock Select]$
 371   1      
 372   1      
 373   1      }
 374          
 375          //================================================================================
 376          // TIMER01_0_enter_DefaultMode_from_RESET
 377          //================================================================================
 378          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 379   1              // $[Timer Initialization]
 380   1              //Save Timer Configuration
 381   1              uint8_t TCON_save;
 382   1              TCON_save = TCON;
 383   1              //Stop Timers
 384   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 385   1      
 386   1              // [Timer Initialization]$
 387   1      
 388   1              // $[TH0 - Timer 0 High Byte]
 389   1              /*
 390   1              // TH0 (Timer 0 High Byte) = 0xB0
 391   1              */
 392   1              TH0 = (0xB0 << TH0_TH0__SHIFT);
 393   1              // [TH0 - Timer 0 High Byte]$
 394   1      
 395   1              // $[TL0 - Timer 0 Low Byte]
 396   1              /*
 397   1              // TL0 (Timer 0 Low Byte) = 0x3F
 398   1              */
 399   1              TL0 = (0x3F << TL0_TL0__SHIFT);
 400   1              // [TL0 - Timer 0 Low Byte]$
 401   1      
 402   1              // $[TH1 - Timer 1 High Byte]
 403   1              /*
 404   1              // TH1 (Timer 1 High Byte) = 0x96
 405   1              */
 406   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 407   1              // [TH1 - Timer 1 High Byte]$
 408   1      
 409   1              // $[TL1 - Timer 1 Low Byte]
 410   1              // [TL1 - Timer 1 Low Byte]$
 411   1      
 412   1              // $[Timer Restoration]
 413   1              //Restore Timer Configuration
 414   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 415   1      
 416   1              // [Timer Restoration]$
 417   1      
 418   1      
 419   1      }
 420          
 421          //================================================================================
 422          // TIMER16_2_enter_DefaultMode_from_RESET
 423          //================================================================================
 424          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 425   1              // $[Timer Initialization]
 426   1              // Save Timer Configuration
 427   1              uint8_t TMR2CN0_TR2_save;
 428   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 8   

 429   1              // Stop Timer
 430   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 431   1              // [Timer Initialization]$
 432   1      
 433   1              // $[TMR2CN0 - Timer 2 Control]
 434   1              // [TMR2CN0 - Timer 2 Control]$
 435   1      
 436   1              // $[TMR2H - Timer 2 High Byte]
 437   1              // [TMR2H - Timer 2 High Byte]$
 438   1      
 439   1              // $[TMR2L - Timer 2 Low Byte]
 440   1              // [TMR2L - Timer 2 Low Byte]$
 441   1      
 442   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 443   1              /*
 444   1              // TMR2RLH (Timer 2 Reload High Byte) = 0xFF
 445   1              */
 446   1              TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 447   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 448   1      
 449   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 450   1              /*
 451   1              // TMR2RLL (Timer 2 Reload Low Byte) = 0x34
 452   1              */
 453   1              TMR2RLL = (0x34 << TMR2RLL_TMR2RLL__SHIFT);
 454   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 455   1      
 456   1              // $[TMR2CN0]
 457   1              /*
 458   1              // TR2 (Timer 2 Run Control) = RUN (Start Timer 2 running.)
 459   1              */
 460   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 461   1              // [TMR2CN0]$
 462   1      
 463   1              // $[Timer Restoration]
 464   1              // Restore Timer Configuration
 465   1              TMR2CN0 |= TMR2CN0_TR2_save;
 466   1              // [Timer Restoration]$
 467   1      
 468   1      
 469   1      }
 470          
 471          //================================================================================
 472          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 473          //================================================================================
 474          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 475   1              // $[CKCON0 - Clock Control 0]
 476   1              /*
 477   1              // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_12 (System clock divided by 12.)
 478   1              // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 479   1              //     defined by the prescale field, SCA.)
 480   1              // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 481   1              //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 482   1              // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 483   1              //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 484   1              // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 485   1              //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 486   1              // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 487   1              //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 488   1              // T1M (Timer 1 Clock Select) = SYSCLK (Timer 1 uses the system clock.)
 489   1              */
 490   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE | CKCON0_T2MH__EXTERNAL_CLOCK
 491   1                       | CKCON0_T2ML__EXTERNAL_CLOCK | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 9   

 492   1                       | CKCON0_T1M__SYSCLK;
 493   1              // [CKCON0 - Clock Control 0]$
 494   1      
 495   1              // $[TMOD - Timer 0/1 Mode]
 496   1              /*
 497   1              // T0M (Timer 0 Mode Select) = MODE1 (Mode 1, 16-bit Counter/Timer)
 498   1              // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 499   1              //     Auto-Reload)
 500   1              // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 501   1              //     on the clock defined by T0M in the CKCON0 register.)
 502   1              // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 503   1              //     irrespective of INT0 logic level.)
 504   1              // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 505   1              //     on the clock defined by T1M in the CKCON0 register.)
 506   1              // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 507   1              //     irrespective of INT1 logic level.)
 508   1              */
 509   1              TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER | TMOD_GATE0__DISABLED
 510   1                       | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 511   1              // [TMOD - Timer 0/1 Mode]$
 512   1      
 513   1              // $[TCON - Timer 0/1 Control]
 514   1              /*
 515   1              // TR0 (Timer 0 Run Control) = RUN (Start Timer 0 running.)
 516   1              // TR1 (Timer 1 Run Control) = RUN (Start Timer 1 running.)
 517   1              */
 518   1              TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
 519   1              // [TCON - Timer 0/1 Control]$
 520   1      
 521   1      
 522   1      }
 523          
 524          //================================================================================
 525          // UART_0_enter_DefaultMode_from_RESET
 526          //================================================================================
 527          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 528   1              // $[SCON0 - UART0 Serial Port Control]
 529   1              /*
 530   1              // REN (Receive Enable) = RECEIVE_ENABLED (UART0 reception enabled.)
 531   1              */
 532   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 533   1              // [SCON0 - UART0 Serial Port Control]$
 534   1      
 535   1      
 536   1      }
 537          
 538          //================================================================================
 539          // INTERRUPT_0_enter_DefaultMode_from_RESET
 540          //================================================================================
 541          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 542   1              // $[EIE1 - Extended Interrupt Enable 1]
 543   1              /*
 544   1              // EADC0 (ADC0 Conversion Complete Interrupt Enable) = ENABLED (Enable
 545   1              //     interrupt requests generated by the ADINT flag.)
 546   1              // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 547   1              //     ADC0 Window Comparison interrupt.)
 548   1              // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 549   1              //     interrupts.)
 550   1              // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 551   1              //     interrupts.)
 552   1              // EMAT (Port Match Interrupts Enable) = DISABLED (Disable all Port Match
 553   1              //     interrupts.)
 554   1              // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 10  

 555   1              //     (Disable all PCA0 interrupts.)
 556   1              // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 557   1              //     interrupts.)
 558   1              // ET3 (Timer 3 Interrupt Enable) = DISABLED (Disable Timer 3
 559   1              //     interrupts.)
 560   1              */
 561   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 562   1                       | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 563   1                       | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 564   1              // [EIE1 - Extended Interrupt Enable 1]$
 565   1      
 566   1              // $[EIP1 - Extended Interrupt Priority 1]
 567   1              // [EIP1 - Extended Interrupt Priority 1]$
 568   1      
 569   1              // $[IE - Interrupt Enable]
 570   1              /*
 571   1              // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 572   1              // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 573   1              //     interrupt 0.)
 574   1              // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 575   1              //     interrupt 1.)
 576   1              // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 577   1              //     interrupts.)
 578   1              // ET0 (Timer 0 Interrupt Enable) = ENABLED (Enable interrupt requests
 579   1              //     generated by the TF0 flag.)
 580   1              // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 581   1              //     interrupt.)
 582   1              // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 583   1              // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 584   1              */
 585   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 586   1                       | IE_ET0__ENABLED | IE_ET1__DISABLED | IE_ET2__DISABLED | IE_ES0__DISABLED;
 587   1              // [IE - Interrupt Enable]$
 588   1      
 589   1              // $[IP - Interrupt Priority]
 590   1              // [IP - Interrupt Priority]$
 591   1      
 592   1      
 593   1      }
 594          
 595          
 596          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 597   1              // $[P2 - Port 2 Pin Latch]
 598   1              // [P2 - Port 2 Pin Latch]$
 599   1      
 600   1              // $[P2MDOUT - Port 2 Output Mode]
 601   1              /*
 602   1              // B0 (Port 2 Bit 0 Output Mode) = PUSH_PULL (P2.0 output is push-pull.)
 603   1              // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 604   1              //     drain.)
 605   1              */
 606   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN;
 607   1              // [P2MDOUT - Port 2 Output Mode]$
 608   1      
 609   1      
 610   1      }
 611          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    163    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 12:38:21 PAGE 11  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
