C51 COMPILER V9.53.0.0   LED                                                               04/06/2017 12:38:21 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\src\led.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Adminis
                    -trator\SimplicityStudio\v3_workspace\aidik_4ch\src\led.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATF
                    -UZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Administrator\SimplicityStudio\v3
                    -_workspace\aidik_4ch\inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C:/Silico
                    -nLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB1;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8
                    -051/v3//Device/EFM8BB1/inc) PRINT(.\src\led.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\led.OBJ)

line level    source

   1          #include "led.h"
   2          #include <SI_EFM8BB1_Register_Enums.h>
   3          #include "stdio.h"
   4          #include "logic.h"
   5          
   6          static uint8_t led_val = 0xff;
   7          enum
   8          {
   9              LED_OFF         = 0x00, //LEDœ®√
  10              LED_ON          = 0x01, //LED≥£¡¡
  11              LED_FLASH       = 0x82, //LED…¡À∏
  12          };
  13          
  14          typedef struct
  15          {
  16                  uint8_t speed;
  17                  uint8_t speed_cnt;
  18                  uint8_t speed_on;
  19                  uint8_t speed_off;
  20                  uint8_t flag;
  21                  uint8_t blink_cnt;
  22                  uint8_t blink_cnt_on;
  23                  uint8_t lock;
  24                  uint8_t key_val;
  25                  uint8_t lock_on;
  26          }_led_ctl;
  27          _led_ctl wireless_led;
  28          
  29          
  30          static bool wirelessLedIsOn(uint8_t key_val)
  31          {
  32   1              if(0x00 == (led_val & (~key_val)))
  33   1              {
  34   2                      return true;
  35   2              }
  36   1              else
  37   1              {
  38   2                      return false;
  39   2              }
  40   1      }
  41          static void  wirelessLedTog(uint8_t key_val)
  42          {
  43   1              if(0x00 == (led_val & (~key_val)))//¡¡
  44   1              {
  45   2                      led_val |= (~key_val);
  46   2              }
  47   1              else
  48   1              {
  49   2                      led_val &= key_val;
  50   2              }
  51   1              SendTo595();
C51 COMPILER V9.53.0.0   LED                                                               04/06/2017 12:38:21 PAGE 2   

  52   1      }
  53          void wirelessScan(void)
  54          {
  55   1          if((wireless_led.flag & 0x80)
  56   1              && (wireless_led.blink_cnt_on <= wireless_led.blink_cnt
  57   1                      || 0 == wireless_led.blink_cnt)
  58   1              )
  59   1          {
  60   2              wireless_led.speed_cnt++;
  61   2              if(wireless_led.speed_cnt >= wireless_led.speed)
  62   2              {
  63   3      
  64   3                  if(wirelessLedIsOn(wireless_led.key_val))
  65   3                  {
  66   4                      if(wireless_led.blink_cnt == wireless_led.blink_cnt_on)
  67   4                      {
  68   5                              wireless_led.lock = false;
  69   5                      }
  70   4                      wireless_led.blink_cnt_on++;
  71   4                      wireless_led.speed = wireless_led.speed_off;
  72   4                  }
  73   3                  else
  74   3                  {
  75   4                      wireless_led.speed = wireless_led.speed_on;
  76   4                  }
  77   3                  wireless_led.speed_cnt = 0;
  78   3                  wirelessLedTog(wireless_led.key_val);
  79   3                  if(wireless_led.blink_cnt < wireless_led.blink_cnt_on
  80   3                                      && wireless_led.lock_on == true
  81   3                                      && device_def.device_work_mode == DEVICE_433)
  82   3                              {
  83   4                                      wireless_led.lock_on = false;
  84   4                                      wirelessLedTog(wireless_led.key_val);
  85   4                              }
  86   3              }
  87   2          }
  88   1      }
  89          
  90          void wirelessLedOn(void)
  91          {
  92   1              wireless_led.flag = LED_ON;
  93   1              led_val &= LED_WIRELESS;
  94   1              SendTo595();
  95   1      }
  96          void wirelessLedOff(void)
  97          {
  98   1              wireless_led.flag = LED_OFF;
  99   1              led_val |= (~LED_WIRELESS);
 100   1              SendTo595();
 101   1      }
 102          void wirelessOn500msOff500ms(uint8_t key_val)
 103          {
 104   1              if(!wireless_led.lock)
 105   1              {
 106   2                      wireless_led.speed = 20;
 107   2                      wireless_led.speed_off = 20;
 108   2                      wireless_led.speed_on = 20;
 109   2                      wireless_led.blink_cnt_on = 0;
 110   2                      wireless_led.blink_cnt = 4;
 111   2                      wireless_led.lock = true;
 112   2                      wireless_led.flag = LED_FLASH;
 113   2                      wireless_led.key_val = key_val;
 114   2                      wireless_led.lock_on = false;
C51 COMPILER V9.53.0.0   LED                                                               04/06/2017 12:38:21 PAGE 3   

 115   2              }
 116   1      }
 117          void wirelessOn50msOff50ms(uint8_t key_val)
 118          {
 119   1              if(!wireless_led.lock)
 120   1              {
 121   2                      wireless_led.speed = 5;
 122   2                      wireless_led.speed_off = 5;
 123   2                      wireless_led.speed_on = 5;
 124   2                      wireless_led.blink_cnt_on = 0;
 125   2                      wireless_led.blink_cnt = 1;
 126   2                      wireless_led.flag = LED_FLASH;
 127   2                      wireless_led.key_val  = key_val;
 128   2                      wireless_led.lock_on = true;
 129   2              }
 130   1      }
 131          
 132          void ledChannel1On(void)
 133          {
 134   1              led_val &= LED_CHANNEL1;
 135   1              SendTo595();
 136   1      }
 137          void ledChannel1Off(void)
 138          {
 139   1              led_val |= (~LED_CHANNEL1);
 140   1              SendTo595();
 141   1      }
 142          void ledChannel2On(void)
 143          {
 144   1              led_val &= LED_CHANNEL2;
 145   1              SendTo595();
 146   1      }
 147          void ledChannel2Off(void)
 148          {
 149   1              led_val |= (~LED_CHANNEL2);
 150   1              SendTo595();
 151   1      }
 152          
 153          void ledChannel3On(void)
 154          {
 155   1              led_val &= LED_CHANNEL3;
 156   1              SendTo595();
 157   1      }
 158          void ledChannel3Off(void)
 159          {
 160   1              led_val |= (~LED_CHANNEL3);
 161   1              SendTo595();
 162   1      }
 163          void ledChannel4On(void)
 164          {
 165   1              led_val &= LED_CHANNEL4;
 166   1              SendTo595();
 167   1      }
 168          void ledChannel4Off(void)
 169          {
 170   1              led_val |= (~LED_CHANNEL4);
 171   1              SendTo595();
 172   1      }
 173          
 174          void ledModeOn(void)
 175          {
 176   1              led_val &= LED_MODE;
 177   1              SendTo595();
C51 COMPILER V9.53.0.0   LED                                                               04/06/2017 12:38:21 PAGE 4   

 178   1      }
 179          void ledModeOff(void)
 180          {
 181   1              led_val |= (~LED_MODE);
 182   1              SendTo595();
 183   1      }
 184          void ledsOff(void)
 185          {
 186   1              led_val = LEDS_OFF;
 187   1              SendTo595();
 188   1      }
 189          void ledsOn(void)
 190          {
 191   1              led_val = LEDS_ON;
 192   1              SendTo595();
 193   1      }
 194          void ledSetChannelsValue(uint8_t val)
 195          {
 196   1              led_val |= 0x0f;
 197   1              led_val &= val;
 198   1              SendTo595();
 199   1      }
 200          void SendTo595(void)
 201          {
 202   1              char i=0;
 203   1              uint8_t temp = led_val;
 204   1              for(i = 0; i < 8; i++)
 205   1              {
 206   2                      SER = temp>>7;
 207   2                      temp= temp<<1;
 208   2                      SCK = 1;
 209   2                      _nop_();
 210   2                      _nop_();
 211   2                      SCK = 0;
 212   2              }
 213   1              RCK = 1;
 214   1              _nop_();
 215   1              _nop_();
 216   1              RCK = 0;
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    302    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
