C51 COMPILER V9.53.0.0   WIRELESS                                                          04/06/2017 12:39:38 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE WIRELESS
OBJECT MODULE PLACED IN .\src\wireless.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Adminis
                    -trator\SimplicityStudio\v3_workspace\aidik_4ch\src\wireless.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) F
                    -LOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Administrator\SimplicityStud
                    -io\v3_workspace\aidik_4ch\inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C:/S
                    -iliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB1;C:/SiliconLabs/SimplicityStudio/v3/developer/sdk
                    -s/si8051/v3//Device/EFM8BB1/inc) PRINT(.\src\wireless.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\wireless.OBJ)

line level    source

   1          /*
   2           * wireless.c
   3           *
   4           *  Created on: 2017-4-5
   5           *      Author: Administrator
   6           */
   7          #include "wireless.h"
   8          #include "led.h"
   9          #include "logic.h"
  10          #include "EFM8BB1_FlashPrimitives.h"
  11          sbit WIRELESS_PIN = P1^2;
  12          static uint8_t xdata decode_data[3] = {0};
  13          static uint8_t xdata dev_params[12] = {0};
  14          static bool wireless_flag = false;
  15          
  16          void savaParamtoFlash(void)
  17          {
  18   1              uint8_t i = 0;
  19   1              FLASH_PageErase(FLASH_LAST);
  20   1              for(i = 0; i < 12; i++)
  21   1              {
  22   2                      FLASH_ByteWrite(FLASH_LAST+i,dev_params[i]);
  23   2              }
  24   1              //FLASH_ByteWrite(FLASH_LAST + 12,work_mode_params);
  25   1      }
  26          bool decodeWireless(uint8_t *decode_data)
  27          {
  28   1              static bool syn_flag = false;
  29   1              static uint8_t bit_cnt = 0;
  30   1              static uint8_t low_cnt = 0;
  31   1              static uint8_t high_cnt = 0;
  32   1              static uint8_t temp_val = 0;
  33   1          uint8_t index = 0;
  34   1              if(!syn_flag)
  35   1              {
  36   2                      if(WIRELESS_PIN == 0)
  37   2                      {
  38   3                              low_cnt++;
  39   3                      }
  40   2                      if(WIRELESS_PIN == 1)
  41   2                      {
  42   3                              if(low_cnt > 60 && low_cnt < 150)
  43   3                              {
  44   4                                      syn_flag = true;
  45   4                              }
  46   3                              low_cnt = 0;
  47   3                      }
  48   2              }
  49   1              if(syn_flag)
  50   1              {
  51   2                      if(WIRELESS_PIN == 1)
C51 COMPILER V9.53.0.0   WIRELESS                                                          04/06/2017 12:39:38 PAGE 2   

  52   2                      {
  53   3                              high_cnt++;
  54   3                      }
  55   2                      else
  56   2                      {
  57   3                              if((high_cnt) > 1 && high_cnt < 6)
  58   3                              {
  59   4                                      bit_cnt++;
  60   4                                      temp_val = (temp_val << 1) | 0x01;
  61   4                              }
  62   3                              else if((high_cnt) > 6 && (high_cnt < 13))
  63   3                              {
  64   4                                      bit_cnt++;
  65   4                                      temp_val = temp_val << 1;
  66   4                              }
  67   3                              else if(high_cnt > 0)
  68   3                              {
  69   4                                      syn_flag = false;
  70   4                                      bit_cnt = 0;
  71   4                                      temp_val = 0;
  72   4                              }
  73   3                              high_cnt = 0;
  74   3                              if(bit_cnt != 0 && bit_cnt % 8 == 0 )
  75   3                              {
  76   4                                      index = (bit_cnt / 8) - 1;
  77   4                                      decode_data[index] = temp_val;
  78   4                                      if(bit_cnt == 24)
  79   4                                      {
  80   5                                              syn_flag = false;
  81   5                                              bit_cnt = 0;
  82   5                                              return true;
  83   5                                      }
  84   4                              }
  85   3                      }
  86   2              }
  87   1              return false;
  88   1      }
  89          
  90          void decode(void)
  91          {
  92   1              if(decodeWireless(decode_data))
  93   1              {
  94   2                      //wirelessLedTog();
  95   2                      wireless_flag  = true;
  96   2              }
  97   1      }
  98          static void wirelessStudy(uint8_t index)
  99          {
 100   1          uint8_t i = 0;
 101   1          uint32_t temp_val = 0;
 102   1          if(device_def.device_channel_def[index].wireless_study_flag == false)
 103   1          {
 104   2              device_def.device_channel_def[index].wireless_lastval =
 105   2                                              ((((decode_data[0] << 8) | decode_data[1]) << 8) | decode_data[2]);
 106   2              device_def.device_channel_def[index].wireless_study_flag = true;
 107   2          }
 108   1          else
 109   1          {
 110   2              if(device_def.device_channel_def[index].wireless_study_flag == true)
 111   2              {
 112   3                  if(device_def.device_channel_def[index].wireless_lastval ==
 113   3                              ((((decode_data[0] << 8) | decode_data[1]) << 8) | decode_data[2]))
 114   3                  {
C51 COMPILER V9.53.0.0   WIRELESS                                                          04/06/2017 12:39:38 PAGE 3   

 115   4                      for(i = 0; i < 12; i = i + 3)
 116   4                                      {
 117   5                                              temp_val = ((((dev_params[i] << 8) | dev_params[i+1]) << 8) | dev_params[i+2]);
 118   5                                              if(device_def.device_channel_def[index].wireless_lastval == temp_val)
 119   5                                              {
 120   6                                                      dev_params[i] = 0;
 121   6                                                      dev_params[i + 1] = 0;
 122   6                                                      dev_params[i + 2] = 0;
 123   6                                                      break;
 124   6                                              }
 125   5                                      }
 126   4                      dev_params[index * 3] = decode_data[0];
 127   4                      dev_params[index * 3 + 1] = decode_data[1];
 128   4                      dev_params[index * 3 + 2] = decode_data[2];
 129   4                      /*存flash*/
 130   4                      //FLASH_ByteWrite();
 131   4                      savaParamtoFlash();
 132   4                      device_def.device_channel_def[index].device_status = DEVICE_STATUS_IDLE;
 133   4                      wirelessOn500msOff500ms(~(0x01 << index));
 134   4                  }
 135   3                  device_def.device_channel_def[index].wireless_study_flag = false;
 136   3                  device_def.device_channel_def[index].wireless_lastval = 0;
 137   3              }
 138   2          }
 139   1      }
 140          static void wirelessAction(void)
 141          {
 142   1          uint8_t i = 0;
 143   1          uint32_t temp_val = 0;
 144   1          if(wireless_flag == true)
 145   1          {
 146   2              for(i = 0; i < 12; i = i + 3)
 147   2                      {
 148   3                              if(dev_params[i] == decode_data[0]
 149   3                                 && dev_params[i + 1] == decode_data[1]
 150   3                                 && dev_params[i + 2] == decode_data[2])
 151   3                              {
 152   4                                      device_def.device_channel_def[i/3].wireless_flag = true;
 153   4                                      //按键处理
 154   4                                      if(device_def.device_work_mode != DEVICE_433)
 155   4                                      {
 156   5                                              setKeyPin(i / 3,false);
 157   5                                      }
 158   4                                      //闪灯
 159   4                                      wirelessOn50msOff50ms(LED_WIRELESS);
 160   4                                      break;
 161   4                              }
 162   3                      }
 163   2          }
 164   1          else
 165   1              {
 166   2              for(i = 0; i < 4; i++)
 167   2              {
 168   3                              if(device_def.device_channel_def[i].wireless_flag == true)
 169   3                              {
 170   4                                      device_def.device_channel_def[i].wireless_flag = false;
 171   4                                      //按键处理
 172   4                                      if(device_def.device_work_mode != DEVICE_433)
 173   4                                      {
 174   5                                              setKeyPin(i,true);
 175   5                                      }
 176   4                              }
 177   3              }
C51 COMPILER V9.53.0.0   WIRELESS                                                          04/06/2017 12:39:38 PAGE 4   

 178   2              }
 179   1      }
 180          void wireless_scan(void)
 181          {
 182   1              uint8_t i = 0;
 183   1              for(i = 0; i < 4; i++)
 184   1              {
 185   2                      if((DEVICE_STATUS_STUDY == device_def.device_channel_def[i].device_status)
 186   2                              && DEVICE_433 == device_def.device_work_mode
 187   2                              && (wireless_flag == true))
 188   2                      {
 189   3                              wirelessStudy(i);
 190   3                              wireless_flag = false;
 191   3                              return;
 192   3                      }
 193   2              }
 194   1              wirelessAction();
 195   1              wireless_flag = false;
 196   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    816    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     15    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
