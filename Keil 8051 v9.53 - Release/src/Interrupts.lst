C51 COMPILER V9.53.0.0   INTERRUPTS                                                        04/06/2017 13:14:59 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src\Interrupts.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Adminis
                    -trator\SimplicityStudio\v3_workspace\aidik_4ch\src\Interrupts.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2)
                    - FLOATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Administrator\SimplicityS
                    -tudio\v3_workspace\aidik_4ch\inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C
                    -:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB1;C:/SiliconLabs/SimplicityStudio/v3/developer/
                    -sdks/si8051/v3//Device/EFM8BB1/inc) REGFILE(aidik_4ch.ORC) PRINT(.\src\Interrupts.lst) COND PAGEWIDTH(120) PAGELENGTH(65
                    -) OBJECT(.\src\Interrupts.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interupts.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9                   
  10          // USER INCLUDES                        
  11          #include <SI_EFM8BB1_Register_Enums.h>
  12          #include <stdio.h>
  13          #include "led.h"
  14          #include "driver/key_driver.h"
  15          #include "logic.h"
  16          #include "wireless.h"
  17          //-----------------------------------------------------------------------------
  18          // ADC0EOC_ISR
  19          //-----------------------------------------------------------------------------
  20          //
  21          // ADC0EOC ISR Content goes here. Remember to clear flag bits:
  22          // ADC0CN0::ADINT (Conversion Complete Interrupt Flag)
  23          //
  24          // This ISR averages 2048 samples then prints the result to the terminal.  The
  25          // ISR is called after each ADC conversion which is triggered by Timer2.
  26          //
  27          //-----------------------------------------------------------------------------
  28          SI_INTERRUPT (ADC0EOC_ISR, ADC0EOC_IRQn)
  29          {
  30   1              adScan();
  31   1              decode();
  32   1      }
  33          
  34          
  35          //-----------------------------------------------------------------------------
  36          // TIMER2_ISR
  37          //-----------------------------------------------------------------------------
  38          //
  39          // TIMER2 ISR Content goes here. Remember to clear flag bits:
  40          // TMR2CN0::TF2H (Timer # High Byte Overflow Flag)
  41          // TMR2CN0::TF2L (Timer # Low Byte Overflow Flag)
  42          //
  43          //-----------------------------------------------------------------------------
  44          SI_INTERRUPT (TIMER2_ISR, TIMER2_IRQn)
  45          {
  46   1      
  47   1      }
  48          
  49          
  50          //-----------------------------------------------------------------------------
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        04/06/2017 13:14:59 PAGE 2   

  51          // TIMER0_ISR
  52          //-----------------------------------------------------------------------------
  53          //
  54          // TIMER0 ISR Content goes here. Remember to clear flag bits:
  55          // TCON::TF0 (Timer 0 Overflow Flag)
  56          //
  57          //-----------------------------------------------------------------------------
  58          SI_INTERRUPT (TIMER0_ISR, TIMER0_IRQn)
  59          {
  60   1              static uint8_t i = 0;
  61   1              i++;
  62   1              TH0 = 0XB0;
  63   1              TL0 = 0X3F;
  64   1              wirelessScan();
  65   1              keyScan();
  66   1              if(i >= 7)
  67   1              {
  68   2                      i = 0;
  69   2                      wireless_scan();
  70   2              }
  71   1              dealNormalMode();
  72   1      }
  73          
  74          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    158    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
