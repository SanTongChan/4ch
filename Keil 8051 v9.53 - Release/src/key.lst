C51 COMPILER V9.53.0.0   KEY                                                               04/06/2017 13:14:59 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\src\key.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Adminis
                    -trator\SimplicityStudio\v3_workspace\aidik_4ch\src\key.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATF
                    -UZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Administrator\SimplicityStudio\v
                    -3_workspace\aidik_4ch\inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C:/Silic
                    -onLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB1;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si
                    -8051/v3//Device/EFM8BB1/inc) REGFILE(aidik_4ch.ORC) PRINT(.\src\key.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src
                    -\key.OBJ)

line level    source

   1          /*
   2           * key.c
   3           *
   4           *  Created on: 2017-4-4
   5           *      Author: Administrator
   6           *      3296  825  1029    1238   1441   1648
   7           */
   8          #include "key.h"
   9          #include "driver/key_driver.h"
  10          #include "logic.h"
  11          #include "led.h"
  12          #include "wireless.h"
  13          
  14          static bool key5_is_press(void)
  15          {
  16   1          if(ad_val >= 750 && ad_val <= 900)
  17   1          {
  18   2              return true;
  19   2          }
  20   1          return false;
  21   1      }
  22          static bool key4_is_press(void)
  23          {
  24   1              if(ad_val >= 950 && ad_val <= 1100)
  25   1              {
  26   2                      return true;
  27   2              }
  28   1              return false;
  29   1      }
  30          static bool key3_is_press(void)
  31          {
  32   1              if(ad_val >= 1150 && ad_val <= 1300)
  33   1              {
  34   2                      return true;
  35   2              }
  36   1              return false;
  37   1      }
  38          static bool key2_is_press(void)
  39          {
  40   1              if(ad_val >= 1350 && ad_val <= 1500)
  41   1              {
  42   2                      return true;
  43   2              }
  44   1              return false;
  45   1      }
  46          static bool key1_is_press(void)
  47          {
  48   1              if(ad_val >= 1550 && ad_val <= 1700)
  49   1              {
  50   2                      return true;
C51 COMPILER V9.53.0.0   KEY                                                               04/06/2017 13:14:59 PAGE 2   

  51   2              }
  52   1              return false;
  53   1      }
  54          /*单击不抬键已经校验过*/
  55          static void key1_short_press(void)
  56          {
  57   1          if(DEVICE_433 == device_def.device_work_mode)
  58   1          {
  59   2              ledChannel1On();
  60   2              return;
  61   2          }
  62   1          KEY1 = 0;
  63   1      }
  64          static void key2_short_press(void)
  65          {
  66   1              if(DEVICE_433 == device_def.device_work_mode)
  67   1              {
  68   2                      ledChannel2On();
  69   2                      return;
  70   2              }
  71   1          KEY2 = 0;
  72   1      }
  73          static void key3_short_press(void)
  74          {
  75   1              if(DEVICE_433 == device_def.device_work_mode)
  76   1              {
  77   2                      ledChannel3On();
  78   2                      return;
  79   2              }
  80   1          KEY3 = 0;
  81   1      }
  82          static void key4_short_press(void)
  83          {
  84   1              if(DEVICE_433 == device_def.device_work_mode)
  85   1              {
  86   2                      ledChannel4On();
  87   2                      return;
  88   2              }
  89   1          KEY4 = 0;
  90   1      }
  91          /*双击搞定*/
  92          static void key1_twice_press(void)
  93          {
  94   1              if(DEVICE_NORMAL == device_def.device_work_mode && DEVICE_NOLOCK == device_def.device_normal_state)
  95   1              {
  96   2                      if(device_def.device_channel_def[0].device_channel_mode == DEVICE_CHANNEL_SELFLOCK)
  97   2                      {
  98   3                              device_def.device_channel_def[0].device_channel_mode = DEVICE_CHANNEL_JOGGING;
  99   3                              ledChannel1On();
 100   3                      }
 101   2                      else if(device_def.device_channel_def[0].device_channel_mode == DEVICE_CHANNEL_JOGGING)
 102   2                      {
 103   3                              device_def.device_channel_def[0].device_channel_mode = DEVICE_CHANNEL_SELFLOCK;
 104   3                              ledChannel1Off();
 105   3                      }
 106   2                      setParams13(0);
 107   2                      savaParamtoFlash();
 108   2              }
 109   1      }
 110          static void key2_twice_press(void)
 111          {
 112   1              if(DEVICE_NORMAL == device_def.device_work_mode && DEVICE_NOLOCK == device_def.device_normal_state)
 113   1              {
C51 COMPILER V9.53.0.0   KEY                                                               04/06/2017 13:14:59 PAGE 3   

 114   2                      if(device_def.device_channel_def[1].device_channel_mode == DEVICE_CHANNEL_SELFLOCK)
 115   2                      {
 116   3                              device_def.device_channel_def[1].device_channel_mode = DEVICE_CHANNEL_JOGGING;
 117   3                              ledChannel2On();
 118   3                      }
 119   2                      else if(device_def.device_channel_def[1].device_channel_mode == DEVICE_CHANNEL_JOGGING)
 120   2                      {
 121   3                              device_def.device_channel_def[1].device_channel_mode = DEVICE_CHANNEL_SELFLOCK;
 122   3                              ledChannel2Off();
 123   3                      }
 124   2                      setParams13(1);
 125   2                      savaParamtoFlash();
 126   2              }
 127   1      }
 128          static void key3_twice_press(void)
 129          {
 130   1              if(DEVICE_NORMAL == device_def.device_work_mode && DEVICE_NOLOCK == device_def.device_normal_state)
 131   1              {
 132   2                      if(device_def.device_channel_def[2].device_channel_mode == DEVICE_CHANNEL_SELFLOCK)
 133   2                      {
 134   3                              device_def.device_channel_def[2].device_channel_mode = DEVICE_CHANNEL_JOGGING;
 135   3                              ledChannel3On();
 136   3                      }
 137   2                      else if(device_def.device_channel_def[2].device_channel_mode == DEVICE_CHANNEL_JOGGING)
 138   2                      {
 139   3                              device_def.device_channel_def[2].device_channel_mode = DEVICE_CHANNEL_SELFLOCK;
 140   3                              ledChannel3Off();
 141   3                      }
 142   2                      setParams13(2);
 143   2                      savaParamtoFlash();
 144   2              }
 145   1      }
 146          static void key4_twice_press(void)
 147          {
 148   1              if(DEVICE_NORMAL == device_def.device_work_mode && DEVICE_NOLOCK == device_def.device_normal_state)
 149   1              {
 150   2                      if(device_def.device_channel_def[3].device_channel_mode == DEVICE_CHANNEL_SELFLOCK)
 151   2                      {
 152   3                              device_def.device_channel_def[3].device_channel_mode = DEVICE_CHANNEL_JOGGING;
 153   3                              ledChannel4On();
 154   3                      }
 155   2                      else if(device_def.device_channel_def[3].device_channel_mode == DEVICE_CHANNEL_JOGGING)
 156   2                      {
 157   3                              device_def.device_channel_def[3].device_channel_mode = DEVICE_CHANNEL_SELFLOCK;
 158   3                              ledChannel4Off();
 159   3                      }
 160   2                      setParams13(3);
 161   2                      savaParamtoFlash();
 162   2              }
 163   1      }
 164          static void key5_twice_press(void)
 165          {
 166   1              if(device_def.device_work_mode == DEVICE_NORMAL)
 167   1              {
 168   2                      if(device_def.device_normal_state == DEVICE_NOLOCK)
 169   2                      {
 170   3                              device_def.device_normal_state = DEVICE_LOCK;
 171   3                              ledModeOn();
 172   3                      }
 173   2                      else if(device_def.device_normal_state == DEVICE_LOCK)
 174   2                      {
 175   3                              device_def.device_normal_state = DEVICE_NOLOCK;
 176   3                              device_def.device_channel_def[0].device_channel_mode = DEVICE_CHANNEL_SELFLOCK;
C51 COMPILER V9.53.0.0   KEY                                                               04/06/2017 13:14:59 PAGE 4   

 177   3                              device_def.device_channel_def[1].device_channel_mode = DEVICE_CHANNEL_SELFLOCK;
 178   3                              device_def.device_channel_def[2].device_channel_mode = DEVICE_CHANNEL_SELFLOCK;
 179   3                              device_def.device_channel_def[3].device_channel_mode = DEVICE_CHANNEL_SELFLOCK;
 180   3                              ledModeOff();
 181   3                      }
 182   2                      setParams13(0);
 183   2                      setParams13(1);
 184   2                      setParams13(2);
 185   2                      setParams13(3);
 186   2                      setParams13(4);
 187   2                      savaParamtoFlash();
 188   2                      ledSetChannelsValue(0xff);
 189   2              }
 190   1      }
 191          static void key1_short_up_press(void)
 192          {
 193   1          KEY1 = 1;
 194   1          if(device_def.device_work_mode == DEVICE_SETTING)
 195   1          {
 196   2              device_def.device_work_mode = DEVICE_NORMAL;
 197   2          }
 198   1          else if(device_def.device_work_mode == DEVICE_433)
 199   1              {
 200   2                      device_def.device_channel_def[0].device_status = DEVICE_STATUS_STUDY;
 201   2                      device_def.device_channel_def[1].device_status = DEVICE_STATUS_IDLE;
 202   2                      device_def.device_channel_def[2].device_status = DEVICE_STATUS_IDLE;
 203   2                      device_def.device_channel_def[3].device_status = DEVICE_STATUS_IDLE;
 204   2                      ledChannel1Off();
 205   2              }
 206   1      }
 207          static void key2_short_up_press(void)
 208          {
 209   1              KEY2 = 1;
 210   1              if(device_def.device_work_mode == DEVICE_SETTING)
 211   1              {
 212   2                      device_def.device_work_mode = DEVICE_NORMAL;
 213   2              }
 214   1              else if(device_def.device_work_mode == DEVICE_433)
 215   1              {
 216   2                      device_def.device_channel_def[0].device_status = DEVICE_STATUS_IDLE;
 217   2                      device_def.device_channel_def[1].device_status = DEVICE_STATUS_STUDY;
 218   2                      device_def.device_channel_def[2].device_status = DEVICE_STATUS_IDLE;
 219   2                      device_def.device_channel_def[3].device_status = DEVICE_STATUS_IDLE;
 220   2                      ledChannel2Off();
 221   2              }
 222   1      }
 223          static void key3_short_up_press(void)
 224          {
 225   1          KEY3 = 1;
 226   1          if(device_def.device_work_mode == DEVICE_SETTING)
 227   1              {
 228   2                      device_def.device_work_mode = DEVICE_NORMAL;
 229   2              }
 230   1              else if(device_def.device_work_mode == DEVICE_433)
 231   1              {
 232   2                      device_def.device_channel_def[0].device_status = DEVICE_STATUS_IDLE;
 233   2                      device_def.device_channel_def[1].device_status = DEVICE_STATUS_IDLE;
 234   2                      device_def.device_channel_def[2].device_status = DEVICE_STATUS_STUDY;
 235   2                      device_def.device_channel_def[3].device_status = DEVICE_STATUS_IDLE;
 236   2                      ledChannel3Off();
 237   2              }
 238   1      }
 239          static void key4_short_up_press(void)
C51 COMPILER V9.53.0.0   KEY                                                               04/06/2017 13:14:59 PAGE 5   

 240          {
 241   1          KEY4 = 1;
 242   1          if(device_def.device_work_mode == DEVICE_SETTING)
 243   1              {
 244   2                      device_def.device_work_mode = DEVICE_NORMAL;
 245   2              }
 246   1              else if(device_def.device_work_mode == DEVICE_433)
 247   1              {
 248   2                      device_def.device_channel_def[0].device_status = DEVICE_STATUS_IDLE;
 249   2                      device_def.device_channel_def[1].device_status = DEVICE_STATUS_IDLE;
 250   2                      device_def.device_channel_def[2].device_status = DEVICE_STATUS_IDLE;
 251   2                      device_def.device_channel_def[3].device_status = DEVICE_STATUS_STUDY;
 252   2                      ledChannel4Off();
 253   2              }
 254   1      }
 255          static void key5_short_up_press(void)
 256          {
 257   1              uint8_t temp = 0;
 258   1              if(device_def.device_work_mode == DEVICE_433)
 259   1              {
 260   2                      device_def.device_work_mode =  DEVICE_NORMAL;
 261   2                      wirelessLedOff();
 262   2                      if(device_def.device_normal_state == DEVICE_LOCK)
 263   2                      {
 264   3                              ledModeOn();
 265   3                      }
 266   2                      else
 267   2                      {
 268   3                              ledModeOff();
 269   3                              temp = device_def.device_channel_def[3].device_channel_mode << 3
 270   3                                              | device_def.device_channel_def[2].device_channel_mode << 2
 271   3                                              | device_def.device_channel_def[1].device_channel_mode << 1
 272   3                                              | device_def.device_channel_def[0].device_channel_mode << 0;
 273   3                              ledSetChannelsValue(~temp);
 274   3                      }
 275   2              }
 276   1      }
 277          static void key1_long_press(void)
 278          {
 279   1          if(device_def.device_work_mode == DEVICE_NORMAL)
 280   1          {
 281   2              device_def.device_work_mode = DEVICE_SETTING;
 282   2          }
 283   1          else if(device_def.device_work_mode == DEVICE_433)
 284   1          {
 285   2              //清空flash
 286   2              device_def.device_channel_def[0].device_status = DEVICE_STATUS_IDLE;
 287   2              ledChannel1Off();
 288   2          }
 289   1       }
 290          static void key2_long_press(void)
 291          {
 292   1              if(device_def.device_work_mode != DEVICE_SETTING
 293   1                              && device_def.device_work_mode != DEVICE_433)
 294   1              {
 295   2                      device_def.device_work_mode = DEVICE_SETTING;
 296   2              }
 297   1              else if(device_def.device_work_mode == DEVICE_433)
 298   1              {
 299   2                      //清空键值
 300   2                      device_def.device_channel_def[1].device_status = DEVICE_STATUS_IDLE;
 301   2                      ledChannel2Off();
 302   2              }
C51 COMPILER V9.53.0.0   KEY                                                               04/06/2017 13:14:59 PAGE 6   

 303   1      }
 304          static void key3_long_press(void)
 305          {
 306   1              if(device_def.device_work_mode != DEVICE_SETTING
 307   1                              && device_def.device_work_mode != DEVICE_433)
 308   1              {
 309   2                      device_def.device_work_mode = DEVICE_SETTING;
 310   2              }
 311   1              else if(device_def.device_work_mode == DEVICE_433)
 312   1              {
 313   2                      //清空键值
 314   2                      device_def.device_channel_def[2].device_status = DEVICE_STATUS_IDLE;
 315   2                      ledChannel3Off();
 316   2              }
 317   1      }
 318          static void key4_long_press(void)
 319          {
 320   1              if(device_def.device_work_mode != DEVICE_SETTING
 321   1                              && device_def.device_work_mode != DEVICE_433)
 322   1              {
 323   2                      device_def.device_work_mode = DEVICE_SETTING;
 324   2              }
 325   1              else if(device_def.device_work_mode == DEVICE_433)
 326   1              {
 327   2                      //清空键值
 328   2                      device_def.device_channel_def[3].device_status = DEVICE_STATUS_IDLE;
 329   2                      ledChannel4Off();
 330   2              }
 331   1      }
 332          static void key5_long_press(void)
 333          {
 334   1              uint8_t temp = 0;
 335   1          if(device_def.device_work_mode == DEVICE_NORMAL)
 336   1          {
 337   2              device_def.device_work_mode = DEVICE_433;
 338   2              device_def.device_channel_def[0].device_status = DEVICE_STATUS_IDLE;
 339   2              device_def.device_channel_def[1].device_status = DEVICE_STATUS_IDLE;
 340   2              device_def.device_channel_def[2].device_status = DEVICE_STATUS_IDLE;
 341   2              device_def.device_channel_def[3].device_status = DEVICE_STATUS_IDLE;
 342   2              ledSetChannelsValue(0xff);
 343   2              ledModeOff();
 344   2              ledChannel1Off();
 345   2              wirelessLedOn();
 346   2          }
 347   1          else if(device_def.device_work_mode == DEVICE_433)
 348   1              {
 349   2                      device_def.device_work_mode =  DEVICE_NORMAL;
 350   2                      wirelessLedOff();
 351   2                      if(device_def.device_normal_state == DEVICE_LOCK)
 352   2                      {
 353   3                              ledModeOn();
 354   3                      }
 355   2                      else
 356   2                      {
 357   3                              ledModeOff();
 358   3                              temp = device_def.device_channel_def[3].device_channel_mode << 3
 359   3                                              | device_def.device_channel_def[2].device_channel_mode << 2
 360   3                                              | device_def.device_channel_def[1].device_channel_mode << 1
 361   3                                              | device_def.device_channel_def[0].device_channel_mode << 0;
 362   3                              ledSetChannelsValue(~temp);
 363   3                      }
 364   2              }
 365   1      }
C51 COMPILER V9.53.0.0   KEY                                                               04/06/2017 13:14:59 PAGE 7   

 366          
 367          static void key1_long_up_press(void)
 368          {
 369   1          KEY1 = 1;
 370   1      }
 371          static void key2_long_up_press(void)
 372          {
 373   1              KEY2 = 1;
 374   1      }
 375          static void key3_long_up_press(void)
 376          {
 377   1              KEY3 = 1;
 378   1      }
 379          static void key4_long_up_press(void)
 380          {
 381   1              KEY4 = 1;
 382   1      }
 383          static void registerKeys(void)
 384          {
 385   1          keyRegisterSingle(key1_is_press,key1_short_press,key1_short_up_press,
 386   1                              key1_long_press,key1_long_up_press,key1_twice_press);
 387   1          keyRegisterSingle(key2_is_press,key2_short_press,key2_short_up_press,
 388   1                              key2_long_press,key2_long_up_press,key2_twice_press);
 389   1          keyRegisterSingle(key3_is_press,key3_short_press,key3_short_up_press,
 390   1                              key3_long_press,key3_long_up_press,key3_twice_press);
 391   1          keyRegisterSingle(key4_is_press,key4_short_press,key4_short_up_press,
 392   1                              key4_long_press,key4_long_up_press,key4_twice_press);
 393   1          keyRegisterSingle(key5_is_press,NULL,key5_short_up_press,
 394   1                              key5_long_press,NULL,key5_twice_press);
 395   1      }
 396          void keyInit(void)
 397          {
 398   1              registerKeys();
 399   1      }
 400          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1046    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
