C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Adminis
                    -trator\SimplicityStudio\v3_workspace\aidik_4ch\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2)
                    - FLOATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Administrator\SimplicityS
                    -tudio\v3_workspace\aidik_4ch\inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C
                    -:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB1;C:/SiliconLabs/SimplicityStudio/v3/developer/
                    -sdks/si8051/v3//Device/EFM8BB1/inc) REGFILE(aidik_4ch.ORC) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65
                    -) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              WDT_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_1_enter_DefaultMode_from_RESET();
  28   1              PORTS_2_enter_DefaultMode_from_RESET();
  29   1              PBCFG_0_enter_DefaultMode_from_RESET();
  30   1              ADC_0_enter_DefaultMode_from_RESET();
  31   1              VREF_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_2_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  37   1              // [Config Calls]$
  38   1      
  39   1      
  40   1      }
  41          
  42          
  43          //================================================================================
  44          // WDT_0_enter_DefaultMode_from_RESET
  45          //================================================================================
  46          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  47   1              // $[WDTCN - Watchdog Timer Control]
  48   1              //Disable Watchdog with key sequence
  49   1              WDTCN = 0xDE; //First key
  50   1              WDTCN = 0xAD; //Second key
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 2   

  51   1              // [WDTCN - Watchdog Timer Control]$
  52   1      
  53   1      
  54   1      }
  55          
  56          //================================================================================
  57          // PORTS_0_enter_DefaultMode_from_RESET
  58          //================================================================================
  59          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  60   1              // $[P0 - Port 0 Pin Latch]
  61   1              // [P0 - Port 0 Pin Latch]$
  62   1      
  63   1              // $[P0MDOUT - Port 0 Output Mode]
  64   1              /*
  65   1              // B0 (Port 0 Bit 0 Output Mode) = PUSH_PULL (P0.0 output is push-pull.)
  66   1              // B1 (Port 0 Bit 1 Output Mode) = PUSH_PULL (P0.1 output is push-pull.)
  67   1              // B2 (Port 0 Bit 2 Output Mode) = PUSH_PULL (P0.2 output is push-pull.)
  68   1              // B3 (Port 0 Bit 3 Output Mode) = PUSH_PULL (P0.3 output is push-pull.)
  69   1              // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
  70   1              // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
  71   1              //     drain.)
  72   1              // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
  73   1              //     drain.)
  74   1              // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
  75   1              //     drain.)
  76   1              */
  77   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__PUSH_PULL | P0MDOUT_B2__PUSH_PULL
  78   1                       | P0MDOUT_B3__PUSH_PULL | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  79   1                       | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
  80   1              // [P0MDOUT - Port 0 Output Mode]$
  81   1      
  82   1              // $[P0MDIN - Port 0 Input Mode]
  83   1              /*
  84   1              // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
  85   1              //     digital mode.)
  86   1              // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
  87   1              //     digital mode.)
  88   1              // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
  89   1              //     digital mode.)
  90   1              // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
  91   1              //     digital mode.)
  92   1              // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
  93   1              //     digital mode.)
  94   1              // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
  95   1              //     digital mode.)
  96   1              // B6 (Port 0 Bit 6 Input Mode) = ANALOG (P0.6 pin is configured for
  97   1              //     analog mode.)
  98   1              // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
  99   1              //     digital mode.)
 100   1              */
 101   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 102   1                       | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 103   1                       | P0MDIN_B6__ANALOG | P0MDIN_B7__DIGITAL;
 104   1              // [P0MDIN - Port 0 Input Mode]$
 105   1      
 106   1              // $[P0SKIP - Port 0 Skip]
 107   1              /*
 108   1              // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 109   1              //     crossbar.)
 110   1              // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 111   1              //     crossbar.)
 112   1              // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
 113   1              //     crossbar.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 3   

 114   1              // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
 115   1              //     crossbar.)
 116   1              // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 117   1              //     crossbar.)
 118   1              // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 119   1              //     crossbar.)
 120   1              // B6 (Port 0 Bit 6 Skip) = SKIPPED (P0.6 pin is skipped by the
 121   1              //     crossbar.)
 122   1              // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 123   1              //     crossbar.)
 124   1              */
 125   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__NOT_SKIPPED | P0SKIP_B2__NOT_SKIPPED
 126   1                       | P0SKIP_B3__NOT_SKIPPED | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 127   1                       | P0SKIP_B6__SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 128   1              // [P0SKIP - Port 0 Skip]$
 129   1      
 130   1              // $[P0MASK - Port 0 Mask]
 131   1              // [P0MASK - Port 0 Mask]$
 132   1      
 133   1              // $[P0MAT - Port 0 Match]
 134   1              // [P0MAT - Port 0 Match]$
 135   1      
 136   1      
 137   1      }
 138          
 139          //================================================================================
 140          // PORTS_1_enter_DefaultMode_from_RESET
 141          //================================================================================
 142          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 143   1              // $[P1 - Port 1 Pin Latch]
 144   1              // [P1 - Port 1 Pin Latch]$
 145   1      
 146   1              // $[P1MDOUT - Port 1 Output Mode]
 147   1              /*
 148   1              // B0 (Port 1 Bit 0 Output Mode) = PUSH_PULL (P1.0 output is push-pull.)
 149   1              // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 150   1              //     drain.)
 151   1              // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
 152   1              //     drain.)
 153   1              // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 154   1              //     drain.)
 155   1              // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
 156   1              //     drain.)
 157   1              // B5 (Port 1 Bit 5 Output Mode) = PUSH_PULL (P1.5 output is push-pull.)
 158   1              // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 159   1              //     drain.)
 160   1              // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 161   1              //     drain.)
 162   1              */
 163   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN | P1MDOUT_B2__OPEN_DRAIN
 164   1                       | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__PUSH_PULL
 165   1                       | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 166   1              // [P1MDOUT - Port 1 Output Mode]$
 167   1      
 168   1              // $[P1MDIN - Port 1 Input Mode]
 169   1              /*
 170   1              // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 171   1              //     digital mode.)
 172   1              // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 173   1              //     digital mode.)
 174   1              // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 175   1              //     digital mode.)
 176   1              // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 4   

 177   1              //     digital mode.)
 178   1              // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 179   1              //     digital mode.)
 180   1              // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 181   1              //     digital mode.)
 182   1              // B6 (Port 1 Bit 6 Input Mode) = ANALOG (P1.6 pin is configured for
 183   1              //     analog mode.)
 184   1              // B7 (Port 1 Bit 7 Input Mode) = ANALOG (P1.7 pin is configured for
 185   1              //     analog mode.)
 186   1              */
 187   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 188   1                       | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 189   1                       | P1MDIN_B6__ANALOG | P1MDIN_B7__ANALOG;
 190   1              // [P1MDIN - Port 1 Input Mode]$
 191   1      
 192   1              // $[P1SKIP - Port 1 Skip]
 193   1              /*
 194   1              // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 195   1              //     crossbar.)
 196   1              // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 197   1              //     crossbar.)
 198   1              // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 199   1              //     crossbar.)
 200   1              // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 201   1              //     crossbar.)
 202   1              // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 203   1              //     crossbar.)
 204   1              // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 205   1              //     crossbar.)
 206   1              // B6 (Port 1 Bit 6 Skip) = SKIPPED (P1.6 pin is skipped by the
 207   1              //     crossbar.)
 208   1              // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 209   1              //     crossbar.)
 210   1              */
 211   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED | P1SKIP_B2__NOT_SKIPPED
 212   1                       | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 213   1                       | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 214   1              // [P1SKIP - Port 1 Skip]$
 215   1      
 216   1              // $[P1MASK - Port 1 Mask]
 217   1              // [P1MASK - Port 1 Mask]$
 218   1      
 219   1              // $[P1MAT - Port 1 Match]
 220   1              // [P1MAT - Port 1 Match]$
 221   1      
 222   1      
 223   1      }
 224          
 225          //================================================================================
 226          // PBCFG_0_enter_DefaultMode_from_RESET
 227          //================================================================================
 228          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 229   1              // $[XBR2 - Port I/O Crossbar 2]
 230   1              /*
 231   1              // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 232   1              //     Pullups enabled (except for Ports whose I/O are configured for analog
 233   1              //     mode).)
 234   1              // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 235   1              */
 236   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 237   1              // [XBR2 - Port I/O Crossbar 2]$
 238   1      
 239   1              // $[PRTDRV - Port Drive Strength]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 5   

 240   1              // [PRTDRV - Port Drive Strength]$
 241   1      
 242   1              // $[XBR0 - Port I/O Crossbar 0]
 243   1              // [XBR0 - Port I/O Crossbar 0]$
 244   1      
 245   1              // $[XBR1 - Port I/O Crossbar 1]
 246   1              // [XBR1 - Port I/O Crossbar 1]$
 247   1      
 248   1      
 249   1      }
 250          
 251          //================================================================================
 252          // ADC_0_enter_DefaultMode_from_RESET
 253          //================================================================================
 254          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 255   1              // $[ADC0CN1 - ADC0 Control 1]
 256   1              // [ADC0CN1 - ADC0 Control 1]$
 257   1      
 258   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 259   1              /*
 260   1              // ADC0MX (AMUX0 Positive Input Selection) = ADC0P14 (Select ADC0.14.)
 261   1              */
 262   1              ADC0MX = ADC0MX_ADC0MX__ADC0P14;
 263   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 264   1      
 265   1              // $[ADC0CF - ADC0 Configuration]
 266   1              /*
 267   1              // ADSC (SAR Clock Divider) = 0x01
 268   1              // AD8BE (8-Bit Mode Enable) = NORMAL (ADC0 operates in 10-bit or 12-bit
 269   1              //     mode (normal operation).)
 270   1              // ADGN (Gain Control) = GAIN_1 (The on-chip PGA gain is 1.)
 271   1              // ADTM (Track Mode) = TRACK_NORMAL (Normal Track Mode. When ADC0 is
 272   1              //     enabled, conversion begins immediately following the start-of-
 273   1              //     conversion signal.)
 274   1              */
 275   1              ADC0CF = (0x01 << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__NORMAL | ADC0CF_ADGN__GAIN_1
 276   1                       | ADC0CF_ADTM__TRACK_NORMAL;
 277   1              // [ADC0CF - ADC0 Configuration]$
 278   1      
 279   1              // $[ADC0AC - ADC0 Accumulator Configuration]
 280   1              // [ADC0AC - ADC0 Accumulator Configuration]$
 281   1      
 282   1              // $[ADC0TK - ADC0 Burst Mode Track Time]
 283   1              // [ADC0TK - ADC0 Burst Mode Track Time]$
 284   1      
 285   1              // $[ADC0PWR - ADC0 Power Control]
 286   1              // [ADC0PWR - ADC0 Power Control]$
 287   1      
 288   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 289   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 290   1      
 291   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 292   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 293   1      
 294   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 295   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 296   1      
 297   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 298   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 299   1      
 300   1              // $[ADC0CN0 - ADC0 Control 0]
 301   1              /*
 302   1              // ADEN (ADC Enable) = ENABLED (Enable ADC0 (active and ready for data
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 6   

 303   1              //     conversions).)
 304   1              // ADCM (Start of Conversion Mode Select) = TIMER2 (ADC0 conversion
 305   1              //     initiated on overflow of Timer 2.)
 306   1              */
 307   1              ADC0CN0 &= ~ADC0CN0_ADCM__FMASK;
 308   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED
 309   1                       | ADC0CN0_ADCM__TIMER2;
 310   1              // [ADC0CN0 - ADC0 Control 0]$
 311   1      
 312   1      
 313   1      }
 314          
 315          //================================================================================
 316          // VREF_0_enter_DefaultMode_from_RESET
 317          //================================================================================
 318          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 319   1              // $[REF0CN - Voltage Reference Control]
 320   1              /*
 321   1              // TEMPE (Temperature Sensor Enable) = TEMP_DISABLED (Disable the
 322   1              //     Temperature Sensor.)
 323   1              // GNDSL (Analog Ground Reference) = GND_PIN (The ADC0 ground reference
 324   1              //     is the GND pin.)
 325   1              // IREFLVL (Internal Voltage Reference Level) = 1P65 (The internal
 326   1              //     reference operates at 1.65 V nominal.)
 327   1              // REFSL (Voltage Reference Select) = VDD_PIN (The ADC0 voltage reference
 328   1              //     is the VDD pin.)
 329   1              */
 330   1              REF0CN = REF0CN_TEMPE__TEMP_DISABLED | REF0CN_GNDSL__GND_PIN | REF0CN_IREFLVL__1P65
 331   1                       | REF0CN_REFSL__VDD_PIN;
 332   1              // [REF0CN - Voltage Reference Control]$
 333   1      
 334   1      
 335   1      }
 336          
 337          //================================================================================
 338          // CLOCK_0_enter_DefaultMode_from_RESET
 339          //================================================================================
 340          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 341   1              // $[CLKSEL - Clock Select]
 342   1              /*
 343   1              // CLKSL (Clock Source Select) = HFOSC (Clock derived from the Internal
 344   1              //     High-Frequency Oscillator.)
 345   1              // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 346   1              //     selected clock source divided by 1.)
 347   1              */
 348   1              CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 349   1              // [CLKSEL - Clock Select]$
 350   1      
 351   1      
 352   1      }
 353          
 354          //================================================================================
 355          // TIMER01_0_enter_DefaultMode_from_RESET
 356          //================================================================================
 357          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 358   1              // $[Timer Initialization]
 359   1              //Save Timer Configuration
 360   1              uint8_t TCON_save;
 361   1              TCON_save = TCON;
 362   1              //Stop Timers
 363   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 364   1      
 365   1              // [Timer Initialization]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 7   

 366   1      
 367   1              // $[TH0 - Timer 0 High Byte]
 368   1              /*
 369   1              // TH0 (Timer 0 High Byte) = 0xB0
 370   1              */
 371   1              TH0 = (0xB0 << TH0_TH0__SHIFT);
 372   1              // [TH0 - Timer 0 High Byte]$
 373   1      
 374   1              // $[TL0 - Timer 0 Low Byte]
 375   1              /*
 376   1              // TL0 (Timer 0 Low Byte) = 0x3F
 377   1              */
 378   1              TL0 = (0x3F << TL0_TL0__SHIFT);
 379   1              // [TL0 - Timer 0 Low Byte]$
 380   1      
 381   1              // $[TH1 - Timer 1 High Byte]
 382   1              /*
 383   1              // TH1 (Timer 1 High Byte) = 0x96
 384   1              */
 385   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 386   1              // [TH1 - Timer 1 High Byte]$
 387   1      
 388   1              // $[TL1 - Timer 1 Low Byte]
 389   1              // [TL1 - Timer 1 Low Byte]$
 390   1      
 391   1              // $[Timer Restoration]
 392   1              //Restore Timer Configuration
 393   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 394   1      
 395   1              // [Timer Restoration]$
 396   1      
 397   1      
 398   1      }
 399          
 400          //================================================================================
 401          // TIMER16_2_enter_DefaultMode_from_RESET
 402          //================================================================================
 403          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 404   1              // $[Timer Initialization]
 405   1              // Save Timer Configuration
 406   1              uint8_t TMR2CN0_TR2_save;
 407   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 408   1              // Stop Timer
 409   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 410   1              // [Timer Initialization]$
 411   1      
 412   1              // $[TMR2CN0 - Timer 2 Control]
 413   1              // [TMR2CN0 - Timer 2 Control]$
 414   1      
 415   1              // $[TMR2H - Timer 2 High Byte]
 416   1              // [TMR2H - Timer 2 High Byte]$
 417   1      
 418   1              // $[TMR2L - Timer 2 Low Byte]
 419   1              // [TMR2L - Timer 2 Low Byte]$
 420   1      
 421   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 422   1              /*
 423   1              // TMR2RLH (Timer 2 Reload High Byte) = 0xFF
 424   1              */
 425   1              TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 426   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 427   1      
 428   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 8   

 429   1              /*
 430   1              // TMR2RLL (Timer 2 Reload Low Byte) = 0x34
 431   1              */
 432   1              TMR2RLL = (0x34 << TMR2RLL_TMR2RLL__SHIFT);
 433   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 434   1      
 435   1              // $[TMR2CN0]
 436   1              /*
 437   1              // TR2 (Timer 2 Run Control) = RUN (Start Timer 2 running.)
 438   1              */
 439   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 440   1              // [TMR2CN0]$
 441   1      
 442   1              // $[Timer Restoration]
 443   1              // Restore Timer Configuration
 444   1              TMR2CN0 |= TMR2CN0_TR2_save;
 445   1              // [Timer Restoration]$
 446   1      
 447   1      
 448   1      }
 449          
 450          //================================================================================
 451          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 452          //================================================================================
 453          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 454   1              // $[CKCON0 - Clock Control 0]
 455   1              /*
 456   1              // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_12 (System clock divided by 12.)
 457   1              // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 458   1              //     defined by the prescale field, SCA.)
 459   1              // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 460   1              //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 461   1              // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 462   1              //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 463   1              // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 464   1              //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 465   1              // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 466   1              //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 467   1              // T1M (Timer 1 Clock Select) = SYSCLK (Timer 1 uses the system clock.)
 468   1              */
 469   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE | CKCON0_T2MH__EXTERNAL_CLOCK
 470   1                       | CKCON0_T2ML__EXTERNAL_CLOCK | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 471   1                       | CKCON0_T1M__SYSCLK;
 472   1              // [CKCON0 - Clock Control 0]$
 473   1      
 474   1              // $[TMOD - Timer 0/1 Mode]
 475   1              /*
 476   1              // T0M (Timer 0 Mode Select) = MODE1 (Mode 1, 16-bit Counter/Timer)
 477   1              // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 478   1              //     Auto-Reload)
 479   1              // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 480   1              //     on the clock defined by T0M in the CKCON0 register.)
 481   1              // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 482   1              //     irrespective of INT0 logic level.)
 483   1              // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 484   1              //     on the clock defined by T1M in the CKCON0 register.)
 485   1              // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 486   1              //     irrespective of INT1 logic level.)
 487   1              */
 488   1              TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER | TMOD_GATE0__DISABLED
 489   1                       | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 490   1              // [TMOD - Timer 0/1 Mode]$
 491   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 9   

 492   1              // $[TCON - Timer 0/1 Control]
 493   1              /*
 494   1              // TR0 (Timer 0 Run Control) = RUN (Start Timer 0 running.)
 495   1              */
 496   1              TCON |= TCON_TR0__RUN;
 497   1              // [TCON - Timer 0/1 Control]$
 498   1      
 499   1      
 500   1      }
 501          
 502          //================================================================================
 503          // UART_0_enter_DefaultMode_from_RESET
 504          //================================================================================
 505          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 506   1              // $[SCON0 - UART0 Serial Port Control]
 507   1              /*
 508   1              // REN (Receive Enable) = RECEIVE_ENABLED (UART0 reception enabled.)
 509   1              */
 510   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 511   1              // [SCON0 - UART0 Serial Port Control]$
 512   1      
 513   1      
 514   1      }
 515          
 516          //================================================================================
 517          // INTERRUPT_0_enter_DefaultMode_from_RESET
 518          //================================================================================
 519          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 520   1              // $[EIE1 - Extended Interrupt Enable 1]
 521   1              /*
 522   1              // EADC0 (ADC0 Conversion Complete Interrupt Enable) = ENABLED (Enable
 523   1              //     interrupt requests generated by the ADINT flag.)
 524   1              // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 525   1              //     ADC0 Window Comparison interrupt.)
 526   1              // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 527   1              //     interrupts.)
 528   1              // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 529   1              //     interrupts.)
 530   1              // EMAT (Port Match Interrupts Enable) = DISABLED (Disable all Port Match
 531   1              //     interrupts.)
 532   1              // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 533   1              //     (Disable all PCA0 interrupts.)
 534   1              // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 535   1              //     interrupts.)
 536   1              // ET3 (Timer 3 Interrupt Enable) = DISABLED (Disable Timer 3
 537   1              //     interrupts.)
 538   1              */
 539   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 540   1                       | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 541   1                       | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 542   1              // [EIE1 - Extended Interrupt Enable 1]$
 543   1      
 544   1              // $[EIP1 - Extended Interrupt Priority 1]
 545   1              // [EIP1 - Extended Interrupt Priority 1]$
 546   1      
 547   1              // $[IE - Interrupt Enable]
 548   1              /*
 549   1              // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 550   1              // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 551   1              //     interrupt 0.)
 552   1              // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 553   1              //     interrupt 1.)
 554   1              // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/06/2017 13:50:36 PAGE 10  

 555   1              //     interrupts.)
 556   1              // ET0 (Timer 0 Interrupt Enable) = ENABLED (Enable interrupt requests
 557   1              //     generated by the TF0 flag.)
 558   1              // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 559   1              //     interrupt.)
 560   1              // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 561   1              // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 562   1              */
 563   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 564   1                       | IE_ET0__ENABLED | IE_ET1__DISABLED | IE_ET2__DISABLED | IE_ES0__DISABLED;
 565   1              // [IE - Interrupt Enable]$
 566   1      
 567   1              // $[IP - Interrupt Priority]
 568   1              // [IP - Interrupt Priority]$
 569   1      
 570   1      
 571   1      }
 572          
 573          
 574          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 575   1              // $[P2 - Port 2 Pin Latch]
 576   1              // [P2 - Port 2 Pin Latch]$
 577   1      
 578   1              // $[P2MDOUT - Port 2 Output Mode]
 579   1              /*
 580   1              // B0 (Port 2 Bit 0 Output Mode) = PUSH_PULL (P2.0 output is push-pull.)
 581   1              // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 582   1              //     drain.)
 583   1              */
 584   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN;
 585   1              // [P2MDOUT - Port 2 Output Mode]$
 586   1      
 587   1      
 588   1      }
 589          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    157    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
